<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:SControlBase.Themes"
                    xmlns:wpf="clr-namespace:SControlBase"
                    xmlns:converters="clr-namespace:SControlBase.Converters">
    <converters:ShadowConverter x:Key="shadowConverter"></converters:ShadowConverter>
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="demoButton" TargetType="Button">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="#2196f3"/>
        <Setter Property="BorderBrush" Value="#2196f3"/>
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="wpf:RippleAssist.Feedback" Value="White" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="wpf:ShadowAssist.ShadowDepth" Value="Depth2" />
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <AdornerDecorator CacheMode="{Binding RelativeSource={RelativeSource Self}, Path=wpf:ShadowAssist.CacheMode}">
                            <Ellipse Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" 
                                     Effect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=wpf:ShadowAssist.ShadowDepth, Converter={StaticResource shadowConverter}}"
                                     x:Name="border">
                            </Ellipse>
                        </AdornerDecorator>
                        <wpf:Ripple Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Focusable="False"  
                                    Clip="{Binding ElementName=GeometryEllipse, Path=RenderedGeometry}" ClipToBounds="True"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Padding="{TemplateBinding Padding}" 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Ellipse x:Name="GeometryEllipse" Fill="Transparent" IsHitTestVisible="False" Focusable="False" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="Stroke" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.23"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="wpf:ShadowAssist.Darken" Value="True" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="border" Property="wpf:ShadowAssist.Darken" Value="True" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MaterialDesignFlatButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Foreground" Value="#2196f3"/>
        <Setter Property="wpf:RippleAssist.Feedback" Value="#FFB6B6B6" />
        <Setter Property="TextBlock.FontWeight" Value="Medium"/>
        <Setter Property="TextBlock.FontSize" Value="14"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="16 4 16 4"/>
        <Setter Property="Height" Value="32" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}" x:Name="border" CornerRadius="2">
                            <wpf:Ripple Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Focusable="False"    
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Padding="{TemplateBinding Padding}" 
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <!--Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/-->
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="#19757575" />
                            <Setter Property="Background" TargetName="border" Value="#19757575" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.23"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="LoginButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <LinearGradientBrush x:Key="ProgressBrush" >
                            <GradientStop Color="White" Offset="0"/>
                            <GradientStop Color="#eb4b4b" Offset=".4"/>
                            <GradientStop Color="White" Offset=".5"/>
                            <GradientStop Color="#eb4b4b" Offset="1"/>
                        </LinearGradientBrush>
                    </ControlTemplate.Resources>
                    <Grid>
                        <TextBlock x:Name="txt" Text="{TemplateBinding Content}" Width="{TemplateBinding Width}" 
                                   Height="{TemplateBinding Height}" Background="#eb4b4b" RenderTransformOrigin=".5,.5" >
                            <TextBlock.RenderTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1"></ScaleTransform>
                            </TextBlock.RenderTransform>
                        </TextBlock>
                        <Ellipse x:Name="ellipse" Height="{TemplateBinding Height}" Width="{TemplateBinding Height}" 
                                 VerticalAlignment="Center" RenderTransformOrigin=".5,.5">
                            <Ellipse.Fill>
                                <SolidColorBrush Color="#eb4b4b" Opacity="1"></SolidColorBrush>
                            </Ellipse.Fill>
                            <Ellipse.RenderTransform>
                                <ScaleTransform ScaleX="0" ScaleY="0"></ScaleTransform>
                            </Ellipse.RenderTransform>
                        </Ellipse>
                        <Ellipse x:Name="tranellipse" Height="10" Width="10" Stroke="{DynamicResource ProgressBrush}"
                                 VerticalAlignment="Center" RenderTransformOrigin=".5 ,.5">
                            <Ellipse.RenderTransform>
                                <RotateTransform Angle="00"></RotateTransform>
                            </Ellipse.RenderTransform>
                        </Ellipse>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="tranellipse"
                                                     Storyboard.TargetProperty="RenderTransform.Angle" 
                                                     RepeatBehavior="Forever"
                                                     From="00" To="359" Duration="0:0:0.75" />
                                        
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ellipse" 
                                                                       Storyboard.TargetProperty="RenderTransform.ScaleX">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ellipse"
                                                                       Storyboard.TargetProperty="RenderTransform.ScaleY">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="txt" 
                                                                       Storyboard.TargetProperty="RenderTransform.ScaleX">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"></EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="txt"
                                                                       Storyboard.TargetProperty="RenderTransform.ScaleY">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"></EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>